#  ____            _
# / ___| _   _ ___| |_ ___ _ __ ___
# \___ \| | | / __| __/ _ \ '_ ` _ \
#  ___) | |_| \__ \ ||  __/ | | | | |
# |____/ \__, |___/\__\___|_| |_| |_|
#        |___/
#
# Author: Rob Sonke
# https://github.com/robsonke/hass-config
#

# These includes are for editor/UI support
scene: !include ../scenes.yaml
automation: !include ../automations.yaml
script: !include ../scripts.yaml

shell_command:
  convert_lovelace: "python /config/utils/json2yaml.py /config/.storage/lovelace /config/lovelace-ui.yaml"

logger:
  default: info
  logs:
    homeassistant.components.calendar: error
    homeassistant.components.websocket_api: fatal
    homeassistant.components.camera: fatal
    homeassistant.components.mqtt: warn
    bleak_retry_connector: debug
    custom_components.multiscrape: debug

tts:
  - platform: google_translate
    language: 'nl'

ios:
  actions:
    - name: good_night
      background_color: "#9e9e9e"
      label:
        text: "Weltruste"
        color: "#ffffff"
      icon:
        icon: weather_night
        color: "#d9d441"

input_boolean:
  dark_mode:
    name: Dark Mode
    icon: mdi:theme-light-dark
  night_mode:
    name: Nacht Mode
    icon: mdi:weather-night
  wallpanel_screensaver_enabled:
    name: Wall Ipad Screensaver

# Custom homekit config currently not supported by the integration page
homekit:
  - name: Home Assistant Bridge
    filter:
      include_entities:
        - input_boolean.guest_mode
        - light.hal
        - light.keuken
        - light.kitchendesk_light
        - light.office_lights
        - light.zwave_light_corner_level
        - light.zwave_light_couch_level
        - light.dining_light
        - light.diningtable_light
        - light.livingback_light
        - light.livingfrpmt_light
        - light.woonkamer
        - light.hoofdslaapkamer
        - light.douche
        - light.inloopkast
        - light.overloop
        - light.badkamer
        - media_player.office
        - media_player.living_room
        - media_player.eetkamer
        - media_player.tv_room
        - alarm_control_panel.alarmo
        - binary_sensor.template_people_home_and_awake
        - cover.front_door

lovelace:
  mode: storage
  dashboards:
    main-dashboard:
      mode: yaml
      title: Main Dashboard
      icon: mdi:view-dashboard-variant
      show_in_sidebar: true
      filename: dashboards/main-dashboard.yaml

frontend:
  themes: !include_dir_merge_named ../themes
  extra_module_url:
    - /hacsfiles/lovelace-card-mod/card-mod.js

binary_sensor:
  - platform: ping
    host: !secret tvliving_host
    name: samsungtv_livingroom_status

  # check internet connection
  - platform: ping
    name: internet_ping
    host: 1.1.1.1
    scan_interval: 10

  # monitor addons
  - platform: group
    unique_id: important_addons
    name: "Important Addons"
    device_class: running
    entities:
      - binary_sensor.zigbee2mqtt_running
      - binary_sensor.esphome_running
      - binary_sensor.amcrest2mqtt_running
      - binary_sensor.mariadb_running
      - binary_sensor.mosquitto_broker_running
      - binary_sensor.a_better_presence_running
      - binary_sensor.frigate_nvr_running
      - binary_sensor.z_wave_js_to_mqtt_running
      - binary_sensor.home_assistant_addon_ecowitt2mqtt_running
      - binary_sensor.appdaemon_running

  - platform: group
    unique_id: doors_and_windows_upstairs
    name: All doors and windows upstairs
    device_class: opening
    entities:
      - binary_sensor.window_noaroom_openclose_contact
      - binary_sensor.window_eva_openclose_sensor
      - binary_sensor.window_masterbed_1_openclose_sensor
      - binary_sensor.window_masterbed_2_openclose_sensor
      - binary_sensor.window_guestroom_openclose_sensor
  - platform: group
    unique_id: doors_and_windows_garden
    name: All doors and windows garden
    device_class: opening
    entities:
      - binary_sensor.sheddoor_openclose_sensor
      - binary_sensor.sheddoor_back_openclose_sensor
      - binary_sensor.cabindoor_openclose_contact
  - platform: group
    unique_id: doors_and_windows
    name: All doors and windows
    device_class: opening
    entities:
      - binary_sensor.backdoor_openclose_sensor
      - binary_sensor.frontdoor_openclose_sensor
      - binary_sensor.sheddoor_openclose_sensor
      - binary_sensor.sheddoor_back_openclose_sensor
      - binary_sensor.windowdoor_ground_1_openclose_sensor
      - binary_sensor.windowdoor_ground_2_openclose_sensor
      - binary_sensor.windowdoor_ground_3_openclose_sensor
      - binary_sensor.windowdoor_ground_4_openclose_sensor
      - binary_sensor.window_office_openclose_sensor
      - binary_sensor.door_hallcloset_openclose_sensor
      - binary_sensor.window_noaroom_openclose_sensor
      - binary_sensor.window_eva_openclose_sensor
      - binary_sensor.window_masterbed_1_openclose_sensor
      - binary_sensor.window_masterbed_2_openclose_sensor
      - binary_sensor.window_guestroom_openclose_sensor
  - platform: group
    unique_id: doors_and_windows_downstairs
    name: All doors and windows downstairs
    device_class: opening
    entities:
      - binary_sensor.backdoor_openclose_sensor
      - binary_sensor.frontdoor_openclose_sensor
      - binary_sensor.door_terrace_openclose_contact
      - binary_sensor.windowdoor_ground_1_openclose_sensor
      - binary_sensor.windowdoor_ground_2_openclose_sensor
      - binary_sensor.windowdoor_ground_3_openclose_sensor
      - binary_sensor.windowdoor_ground_4_openclose_sensor
      - binary_sensor.window_office_openclose_sensor

group:
  # https://www.home-assistant.io/integrations/group/#old-style-groups
  # but no alternative yet

  # monitored entities to check if they are online
  monitored_entities:
    name: Monitored Entities
    entities:
      - binary_sensor.backdoor_openclose_sensor
      - binary_sensor.frontdoor_openclose_sensor
      - binary_sensor.door_terrace_openclose_contact
      - binary_sensor.windowdoor_ground_1_openclose_sensor
      - binary_sensor.windowdoor_ground_2_openclose_sensor
      - binary_sensor.windowdoor_ground_3_openclose_sensor
      - binary_sensor.windowdoor_ground_4_openclose_sensor
      - sensor.light_sensor_garden
      - binary_sensor.hallwaydoor_openclose_sensor
      - binary_sensor.window_eva_openclose_sensor
      - binary_sensor.window_noaroom_openclose_sensor
      - sensor.climate_sensor_eva_temperature
      - sensor.climate_sensor_noa_temperature
      - sensor.climate_sensor_guestroom_temperature
      - sensor.climate_sensor_masterbedroom_temperature
      - binary_sensor.motion_sensor_toiletdownstairs_presence
      - sensor.energy_consumed_tariff_1
      - sensor.energy_consumed_tariff_2
      - sensor.climate_sensor_kitchen_temperature
      - sensor.climate_sensor_living_temperature
      - binary_sensor.window_masterbed_1_openclose_sensor
      - binary_sensor.window_masterbed_2_openclose_sensor
      - binary_sensor.window_guestroom_openclose_sensor

  ignored_entities:
    entities:
      - binary_sensor.updater
      - sensor.althermasensors

template:
  - sensor:
    - unique_id: hacs_version
      state: >
        {{ device_attr(device_id('sensor.hacs'), 'sw_version') }}
      attributes:
        friendly_name: HACS Version

  - sensor:
    - unique_id: sidebar_time
      state: template
      attributes:
        time: >
          {% set hours = now().strftime('%H') %}
          {% set minutes = now().strftime('%M') %}
          <span class="time">
            {{ hours }}<span class="time-colon">:</span>{{ minutes }}
          </span>
        date: |
          <b>
          {%- if strptime(states('sensor.date'), '%Y-%m-%d').day != null %}
          {%- set days = ['Maandag', 'Dinsdag', 'Woensdag', 'Donderdag', 'Vrijdag', 'Zaterdag', 'Zondag'] %}
          {%- set months = ['Januari', 'Februari', 'Maart', 'April', 'Mei', 'Juni',
          'Juli', 'Augustus', 'September', 'Oktober', 'November', 'December'] %}
            {{- days[now().weekday()] }}, {{ strptime(states('sensor.date'), '%Y-%m-%d').day }} {{ months[now().month-1] }}
          {%- endif -%}
          </b>

  # important entities
  - trigger:
    - platform: time_pattern
      minutes: "*"
    sensor:
    - unique_id: unavailable_entities
      attributes:
        friendly_name: "Unavailable Entities"
        count: "{{ expand('group.monitored_entities') | rejectattr('state', 'equalto', '') | selectattr('state', 'in', ['unavailable', 'unknown', 'none']) | list | count }}"
      state_class: measurement
      unit_of_measurement: entities
      state: "{{ expand('group.monitored_entities') | rejectattr('state', 'equalto', '') | selectattr('state', 'in', ['unavailable', 'unknown', 'none']) | join(', ', attribute='attributes.friendly_name') | truncate(252) or 'Online' }}"

  # all unavailable entities
  - trigger:
    - platform: time_pattern
      minutes: "/5"
    sensor:
      - unique_id: all_unavailable_entities
        unit_of_measurement: entities
        state: >
          {% if state_attr('sensor.all_unavailable_entities','entities') | lower not in ['unknown','unavailable','none'] %}
            {{ state_attr('sensor.all_unavailable_entities','entities') | count }}
          {% endif %}
        attributes:
          friendly_name: "All Unavailable Entities"
          entities: >
            {% set ignore_time = 15 %}
            {% set unavail = namespace(entities=[]) %}
            {% set entities = states|rejectattr('domain','eq','group')
              |rejectattr('entity_id','in',state_attr('group.ignored_entities','entity_id'))
              |rejectattr('state', 'equalto', '')
              |selectattr('state','in',['unavailable','unknown','none'])|map(attribute='entity_id')|list %}
            {% for item in entities %}
              {% if item != "None" and states[item].last_changed.timestamp() < now().timestamp() - ignore_time %}
                {% set unavail.entities = unavail.entities + [item] %}
              {% endif %}
            {% endfor %}
            {{ unavail.entities }}
  # count all possible updates to one sensor
  - trigger:
    - platform: time_pattern
      minutes: "*"
    sensor:
    - unique_id: ha_all_updates
      attributes:
        friendly_name: All Updates
        updates: >
          <ul>
          {%- for entity in expand(states.update) %}
            {%- if is_state(entity.entity_id, 'on') %}
              <li>
                {%- if state_attr(entity.entity_id, 'release_url') is not none %}
                <b><a href="#" onclick="window.open('{{ state_attr(entity.entity_id, 'release_url') }}');">{{ state_attr(entity.entity_id, 'friendly_name') }}</a></b>
                {%- else %}
                <b>{{ state_attr(entity.entity_id, 'friendly_name') }}</b>
                {%- endif %}
                {{ state_attr(entity.entity_id, 'installed_version') }} &#10142; {{ state_attr(entity.entity_id, 'latest_version') }}
                <ha-icon-button onclick="cardTools.hass.callService('browser_mod', 'close_popup', {}); cardTools.moreInfo('{{ entity.entity_id }}')"><ha-icon style="--mdc-icon-size: 24px; vertical-align: 100%;" icon="mdi:cloud-download"></ha-icon></ha-icon-button>
              </li>
            {%- endif %}
          {%- endfor %}
          </ul>
      icon: mdi:update
      state: >
        {{ expand(states.update) | selectattr('state', 'in', ['on']) | list | count }}
      unit_of_measurement: "Update(s)"

  # Regular counters
  - sensor:
    - unique_id: count_automations
      attributes:
        friendly_name: Automations count
      state: >
        {% set dummy = states("sensor.date") %}
        {{ states.automation | count }}
    - unique_id: count_device_trackers
      attributes:
        friendly_name: Device Trackers count
      state: >
        {% set dummy = states("sensor.date") %}
        {{ states.device_tracker | count }}
    - unique_id: count_lights
      attributes:
        friendly_name: Lights count
      state: >
        {% set dummy = states("sensor.date") %}
        {{ states.light | count }}
    - unique_id: count_binary_sensors
      attributes:
        friendly_name: Binary Sensors count
      state: >
        {% set dummy = states("sensor.date") %}
        {{ states.binary_sensor | count }}
    - unique_id: count_sensors
      attributes:
        friendly_name: Sensors count
      state: >
        {% set dummy = states("sensor.date") %}
        {{ states.sensor | count }}
    - unique_id: count_switches
      attributes:
        friendly_name: Switches count
      state: >
        {% set dummy = states("sensor.date") %}
        {{ states.switch | count }}
    - unique_id: count_zones
      attributes:
        friendly_name: Zone count
      state: >
        {% set dummy = states("sensor.date") %}
        {{ states.zone | count }}
    - unique_id: count_cameras
      attributes:
        friendly_name: Camera count
      state: >
        {% set dummy = states("sensor.date") %}
        {{ states.camera | count }}
    - unique_id: count_media_players
      attributes:
        friendly_name: Media Players count
      state: >
        {% set dummy = states("sensor.date") %}
        {{ states.media_player | count }}
    - unique_id: count_scripts
      attributes:
        friendly_name: Scripts count
      state: >
        {% set dummy = states("sensor.date") %}
        {{ states.script | count }}
    - unique_id: count_locks
      attributes:
        friendly_name: Locks count
      state: >
        {% set dummy = states("sensor.date") %}
        {{ states.lock | count }}
    - unique_id: count_vacuums
      attributes:
        friendly_name: Vacuum count
      state: >
        {% set dummy = states("sensor.date") %}
        {{ states.vacuum | count }}
    - unique_id: count_zwaves
      attributes:
        friendly_name: ZWave count
      state: >
        {% set dummy = states("sensor.date") %}
        {{ states.zwave | count }}

sensor:
  - platform: rest
    name: hass_release_notes
    resource: https://api.github.com/repos/home-assistant/core/releases/latest
    value_template: >
      {{ value_json.name }}
    json_attributes:
      - body
    scan_interval: 21600

  - platform: rest
    name: hass_release_notes_rc
    resource: https://api.github.com/repos/home-assistant/core/releases?per_page=1
    value_template: >
      {{ value_json[0].name }}
    json_attributes:
      - body
    scan_interval: 21600

  - platform: time_date
    display_options:
      - 'time'
      - 'date'
      - 'date_time'

  - platform: systemmonitor
    resources:
      - type: disk_use_percent
        arg: /
      - type: memory_use_percent
      - type: processor_use
      - type: last_boot

  - platform: unifigateway
    host: !secret router_ip
    port: 443
    version: 'UDMP-unifiOS'
    username: !secret unifi_username
    password: !secret unifi_password
    verify_ssl: false
    monitored_conditions:
      - www
      - lan
      - wan
      - wlan
      - alerts
      - firmware