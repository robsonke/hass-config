#  ____                                
# / ___|  ___ _ __  ___  ___  _ __ ___ 
# \___ \ / _ \ '_ \/ __|/ _ \| '__/ __|
#  ___) |  __/ | | \__ \ (_) | |  \__ \
# |____/ \___|_| |_|___/\___/|_|  |___/
#
# Author: Rob Sonke
# https://github.com/robsonke/hass-config
#

- platform: version

- platform: dsmr
  port: /dev/serial/by-id/usb-FTDI_FT232R_USB_UART_AL00WDA2-if00-port0
  dsmr_version: 5
- platform: time_date
  display_options:
    - 'time'
    - 'date'
    - 'date_time'

- platform: moon
- platform: uptime
- platform: dnsip

# convert the uptime one to a real value
- platform: template
  sensors:
    ha_uptime:
      friendly_name: 'HA uptime minutes'
      value_template: >
        {{ (as_timestamp(now()) - as_timestamp(states('sensor.uptime'))) / 60 }}


# tracks changes in the lovelace file
- platform: filesize
  file_paths:
    - /config/.storage/lovelace

- platform: systemmonitor
  resources:
    - type: disk_use_percent
      arg: /
    - type: memory_use_percent
    - type: processor_use
    - type: last_boot

- platform: template
  sensors:
    light_dark_level_inside:
      friendly_name: "Licht sterkte grens binnen"
      unit_of_measurement: 'lux'
      value_template: "140"
- platform: template
  sensors:
    light_dark_level_outside:
      friendly_name: "Licht sterkte grens buiten"
      unit_of_measurement: 'lux'
      value_template: "200"

# same sensor but with other unit of measurement
- platform: template
  sensors:
    power_consumption_w:
      friendly_name: Power Consumption Watt
      unit_of_measurement: 'W'
      value_template: "{{ states('sensor.power_consumption') | float * 1000 | round(0) }}"


## monitor.sh config
# - platform: mqtt
#   state_topic: 'monitor/raspberrypi-zero-1/phone_rob'
#   value_template: '{{ value_json.confidence }}'
#   unit_of_measurement: '%'
#   name: 'phone_rob_ground_floor_confidence'
# - platform: mqtt
#   state_topic: 'monitor/raspberrypi-zero-1/phone_steffi'
#   value_template: '{{ value_json.confidence }}'
#   unit_of_measurement: '%'
#   name: 'phone_steffi_ground_floor_confidence'

# - platform: mqtt
#   state_topic: 'monitor/raspberrypi-zero-2/phone_rob'
#   value_template: '{{ value_json.confidence }}'
#   unit_of_measurement: '%'
#   name: 'phone_rob_first_floor_confidence'
# - platform: mqtt
#   state_topic: 'monitor/raspberrypi-zero-2/phone_steffi'
#   value_template: '{{ value_json.confidence }}'
#   unit_of_measurement: '%'
#   name: 'phone_steffi_first_floor_confidence'

# - platform: mqtt
#   state_topic: 'monitor/raspberrypi-zero-3/phone_rob'
#   value_template: '{{ value_json.confidence }}'
#   unit_of_measurement: '%'
#   name: 'phone_rob_garden_confidence'
# - platform: mqtt
#   state_topic: 'monitor/raspberrypi-zero-3/phone_steffi'
#   value_template: '{{ value_json.confidence }}'
#   unit_of_measurement: '%'
#   name: 'phone_steffi_garden_confidence'

# - platform: mqtt
#   state_topic: 'monitor/raspberrypi-zero-4/phone_rob'
#   value_template: '{{ value_json.confidence }}'
#   unit_of_measurement: '%'
#   name: 'phone_rob_spare_confidence'
# - platform: mqtt
#   state_topic: 'monitor/raspberrypi-zero-4/phone_steffi'
#   value_template: '{{ value_json.confidence }}'
#   unit_of_measurement: '%'
#   name: 'phone_steffi_spare_confidence'

# - platform: min_max
#   name: home_occupancy_confidence
#   type: max
#   round_digits: 0
#   entity_ids:
#     - sensor.phone_rob_ground_floor_confidence
#     - sensor.phone_rob_first_floor_confidence
#     - sensor.phone_rob_garden_confidence
#     - sensor.phone_rob_spare_confidence
#     - sensor.phone_steffi_ground_floor_confidence
#     - sensor.phone_steffi_first_floor_confidence
#     - sensor.phone_steffi_garden_confidence
#     - sensor.phone_steffi_spare_confidence
# - platform: min_max
#   name: home_occupancy_confidence_rob
#   type: max
#   round_digits: 0
#   entity_ids:
#     - sensor.phone_rob_ground_floor_confidence
#     - sensor.phone_rob_first_floor_confidence
#     - sensor.phone_rob_garden_confidence
#     - sensor.phone_rob_spare_confidence
# - platform: min_max
#   name: home_occupancy_confidence_steffi
#   type: max
#   round_digits: 0
#   entity_ids:
#     - sensor.phone_steffi_ground_floor_confidence
#     - sensor.phone_steffi_first_floor_confidence
#     - sensor.phone_steffi_garden_confidence
#     - sensor.phone_steffi_spare_confidence


# tp-link kasa
- platform: template
  sensors:
    kasa_winecooler_amps:
      friendly_name_template: "{{ states.switch.kasa_winecooler.name}} Current"
      value_template: '{{ states.switch.kasa_winecooler.attributes["current_a"] | float }}'
      unit_of_measurement: 'A'
      device_class: power
    kasa_winecooler_watts:
      friendly_name_template: "{{ states.switch.kasa_winecooler.name}} Current Consumption"
      value_template: '{{ states.switch.kasa_winecooler.attributes["current_power_w"] | float }}'
      unit_of_measurement: 'W'
      device_class: power
    kasa_winecooler_total_kwh:
      friendly_name_template: "{{ states.switch.kasa_winecooler.name}} Total Consumption"
      value_template: '{{ states.switch.kasa_winecooler.attributes["total_energy_kwh"] | float }}'
      unit_of_measurement: 'kWh'
      device_class: power
    kasa_winecooler_volts:
      friendly_name_template: "{{ states.switch.kasa_winecooler.name}} Voltage"
      value_template: '{{ states.switch.kasa_winecooler.attributes["voltage"] | float }}'
      unit_of_measurement: 'V'
      device_class: power
    kasa_winecooler_today_kwh:
      friendly_name_template: "{{ states.switch.kasa_winecooler.name}} Today's Consumption"
      value_template: '{{ states.switch.kasa_winecooler.attributes["today_energy_kwh"] | float }}'
      unit_of_measurement: 'kWh'
      device_class: power
    kasa_wasmachine_amps:
      friendly_name_template: "{{ states.switch.kasa_wasmachine.name}} Current"
      value_template: '{{ states.switch.kasa_wasmachine.attributes["current_a"] | float }}'
      unit_of_measurement: 'A'
      device_class: power
    kasa_wasmachine_watts:
      friendly_name_template: "{{ states.switch.kasa_wasmachine.name}} Current Consumption"
      value_template: '{{ states.switch.kasa_wasmachine.attributes["current_power_w"] | float }}'
      unit_of_measurement: 'W'
      device_class: power
    kasa_wasmachine_total_kwh:
      friendly_name_template: "{{ states.switch.kasa_wasmachine.name}} Total Consumption"
      value_template: '{{ states.switch.kasa_wasmachine.attributes["total_energy_kwh"] | float }}'
      unit_of_measurement: 'kWh'
      device_class: power
    kasa_wasmachine_volts:
      friendly_name_template: "{{ states.switch.kasa_wasmachine.name}} Voltage"
      value_template: '{{ states.switch.kasa_wasmachine.attributes["voltage"] | float }}'
      unit_of_measurement: 'V'
      device_class: power
    kasa_wasmachine_today_kwh:
      friendly_name_template: "{{ states.switch.kasa_wasmachine.name}} Today's Consumption"
      value_template: '{{ states.switch.kasa_wasmachine.attributes["today_energy_kwh"] | float }}'
      unit_of_measurement: 'kWh'
      device_class: power
    kasa_vaatwasser_amps:
      friendly_name_template: "{{ states.switch.kasa_vaatwasser.name}} Current"
      value_template: '{{ states.switch.kasa_vaatwasser.attributes["current_a"] | float }}'
      unit_of_measurement: 'A'
      device_class: power
    kasa_vaatwasser_watts:
      friendly_name_template: "{{ states.switch.kasa_vaatwasser.name}} Current Consumption"
      value_template: '{{ states.switch.kasa_vaatwasser.attributes["current_power_w"] | float }}'
      unit_of_measurement: 'W'
      device_class: power
    kasa_vaatwasser_total_kwh:
      friendly_name_template: "{{ states.switch.kasa_vaatwasser.name}} Total Consumption"
      value_template: '{{ states.switch.kasa_vaatwasser.attributes["total_energy_kwh"] | float }}'
      unit_of_measurement: 'kWh'
      device_class: power
    kasa_vaatwasser_volts:
      friendly_name_template: "{{ states.switch.kasa_vaatwasser.name}} Voltage"
      value_template: '{{ states.switch.kasa_vaatwasser.attributes["voltage"] | float }}'
      unit_of_measurement: 'V'
      device_class: power
    kasa_vaatwasser_today_kwh:
      friendly_name_template: "{{ states.switch.kasa_vaatwasser.name}} Today's Consumption"
      value_template: '{{ states.switch.kasa_vaatwasser.attributes["today_energy_kwh"] | float }}'
      unit_of_measurement: 'kWh'
      device_class: power
    kasa_infrarood_slaapkamer_amps:
      friendly_name_template: "{{ states.switch.kasa_infrarood_slaapkamer.name}} Current"
      value_template: '{{ states.switch.kasa_infrarood_slaapkamer.attributes["current_a"] | float }}'
      unit_of_measurement: 'A'
      device_class: power
    kasa_infrarood_slaapkamer_watts:
      friendly_name_template: "{{ states.switch.kasa_infrarood_slaapkamer.name}} Current Consumption"
      value_template: '{{ states.switch.kasa_infrarood_slaapkamer.attributes["current_power_w"] | float }}'
      unit_of_measurement: 'W'
      device_class: power
    kasa_infrarood_slaapkamer_total_kwh:
      friendly_name_template: "{{ states.switch.kasa_infrarood_slaapkamer.name}} Total Consumption"
      value_template: '{{ states.switch.kasa_infrarood_slaapkamer.attributes["total_energy_kwh"] | float }}'
      unit_of_measurement: 'kWh'
      device_class: power
    kasa_infrarood_slaapkamer_volts:
      friendly_name_template: "{{ states.switch.kasa_infrarood_slaapkamer.name}} Voltage"
      value_template: '{{ states.switch.kasa_infrarood_slaapkamer.attributes["voltage"] | float }}'
      unit_of_measurement: 'V'
      device_class: power
    kasa_infrarood_slaapkamer_today_kwh:
      friendly_name_template: "{{ states.switch.kasa_infrarood_slaapkamer.name}} Today's Consumption"
      value_template: '{{ states.switch.kasa_infrarood_slaapkamer.attributes["today_energy_kwh"] | float }}'
      unit_of_measurement: 'kWh'
      device_class: power
    weather_temperature:
      friendly_name: Buitentemperatuur
      value_template: '{{ state_attr("weather.home", "temperature") }}'
      unit_of_measurement: '°C'
      device_class: power

- platform: buienradar
  name: !secret weather_city
  latitude: !secret latitude_coordinate
  longitude: !secret longitude_coordinate
  monitored_conditions:
    - stationname
    - barometerfc
    - barometerfcname
    - conditioncode
    - condition
    - conditiondetailed
    - conditionexact
    - symbol
    - feeltemperature
    - humidity
    - temperature
    - mintemp_1d
    - groundtemperature
    - windspeed
    - windforce
    - winddirection
    - pressure
    - visibility
    - precipitation_forecast_average
    - precipitation_forecast_total
    - rainlast24hour
    - rainlasthour

- platform: waze_travel_time
  name: Home to work
  origin: !secret home_address
  destination: !secret work_address
  region: 'EU'

- platform: template
  sensors:
    daily_energy_consumption:
      friendly_name: Daily Energy
      unit_of_measurement: kWh
      value_template: "{{ states('sensor.daily_energy_offpeak')|float + states('sensor.daily_energy_peak')|float }}"
    monthly_energy_consumption:
      friendly_name: Monthly Energy
      unit_of_measurement: kWh
      value_template: "{{ states('sensor.monthly_energy_offpeak')|float + states('sensor.monthly_energy_peak')|float }}"

- platform: template
  sensors:
    doors_windows_upstairs_open_count:
      friendly_name: 'Open windows and doors upstairs'
      value_template: >
        {% set sensors = [states.binary_sensor.window_atticroom_openclose_sensor,
                          states.binary_sensor.window_evaroom_openclose_sensor,
                          states.binary_sensor.window_masterbed_1_openclose_sensor,
                          states.binary_sensor.window_masterbed_2_openclose_sensor,
                          states.binary_sensor.window_guestroom_openclose_sensor] %}
        {{ sensors | selectattr('state', 'eq', 'Open') | list | count }}
    doors_windows_downstairs_open_count:
      friendly_name: 'Open windows and doors downstairs'
      value_template: >
        {% set sensors = [states.binary_sensor.backdoor_openclose_sensor,
                          states.binary_sensor.frontdoor_openclose_sensor,
                          states.binary_sensor.sheddoor_openclose_sensor,
                          states.binary_sensor.windowdoor_ground_1_openclose_sensor,
                          states.binary_sensor.windowdoor_ground_2_openclose_sensor,
                          states.binary_sensor.windowdoor_ground_3_openclose_sensor,
                          states.binary_sensor.windowdoor_ground_4_openclose_sensor,
                          states.binary_sensor.window_office_openclose_sensor] %}
        {{ sensors | selectattr('state', 'eq', 'Open') | list | count }}
    doors_windows_open_count:
      friendly_name: 'Open windows downstairs'
      value_template: >
        {{ states.sensor.doors_windows_upstairs_open_count.state | int + states.sensor.doors_windows_downstairs_open_count.state | int }}

- platform: template
  sensors:
    count_automations:
      value_template: >
        {% set dummy = states("sensor.date") %}
        {{ states.automation | count }}
    count_device_trackers:
      value_template: >
        {% set dummy = states("sensor.date") %}
        {{ states.device_tracker | count }}
    count_lights:
      value_template: >
        {% set dummy = states("sensor.date") %}
        {{ states.light | count }}
    count_binary_sensors:
      value_template: >
        {% set dummy = states("sensor.date") %}
        {{ states.binary_sensor | count }}
    count_sensors:
      value_template: >
        {% set dummy = states("sensor.date") %}
        {{ states.sensor | count }}
    count_switches:
      value_template: >
        {% set dummy = states("sensor.date") %}
        {{ states.switch | count }}
    count_zones:
      value_template: >
        {% set dummy = states("sensor.date") %}
        {{ states.zone | count }}
    count_cameras:
      value_template: >
        {% set dummy = states("sensor.date") %}
        {{ states.camera | count }}
    count_media_players:
      value_template: >
        {% set dummy = states("sensor.date") %}
        {{ states.media_player | count }}
    count_scripts:
      value_template: >
        {% set dummy = states("sensor.date") %}
        {{ states.script | count }}
    count_locks:
      value_template: >
        {% set dummy = states("sensor.date") %}
        {{ states.lock | count }}
    count_vacuums:
      value_template: >
        {% set dummy = states("sensor.date") %}
        {{ states.vacuum | count }}
    count_zwaves:
      value_template: >
        {% set dummy = states("sensor.date") %}
        {{ states.zwave | count }}