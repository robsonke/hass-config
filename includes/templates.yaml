#  _____                    _       _
# |_   _|__ _ __ ___  _ __ | | __ _| |_ ___  ___
#   | |/ _ \ '_ ` _ \| '_ \| |/ _` | __/ _ \/ __|
#   | |  __/ | | | | | |_) | | (_| | ||  __/\__ \
#   |_|\___|_| |_| |_| .__/|_|\__,_|\__\___||___/
#                    |_|
# Author: Rob Sonke
# https://github.com/robsonke/hass-config
#

- sensor:
    # same sensor but with other unit of measurement
    - unique_id: power_consumption_watt
      name: Power Consumption Watt
      unit_of_measurement: 'W'
      state: "{{ states('sensor.power_consumption') | float * 1000 | round(0) }}"
    # convert the uptime one to a real value
    - unique_id: ha_uptime
      name: 'HA uptime minutes'
      state: >
        {{ (as_timestamp(now()) - as_timestamp(states('sensor.uptime'))) / 60 }}

- sensor:
    - unique_id: daily_consumption_energy
      name: "Daily Consumption Energy"
      unit_of_measurement: kWh
      device_class: energy
      state_class: measurement
      state: "{{ states('sensor.daily_energy_offpeak')|float + states('sensor.daily_energy_peak')|float }}"
    - unique_id: monthly_consumption_energy
      name: "Monthly Consumption Energy"
      unit_of_measurement: kWh
      device_class: energy
      state_class: measurement
      state: "{{ states('sensor.monthly_energy_offpeak')|float + states('sensor.monthly_energy_peak')|float }}"
    - unique_id: yearly_consumption_energy
      name: "Yearly Consumption Energy"
      unit_of_measurement: kWh
      device_class: energy
      state_class: measurement
      state: "{{ states('sensor.yearly_energy_offpeak')|float + states('sensor.yearly_energy_peak')|float }}"

- sensor:
    - unique_id: open_windows_and_doors_upstairs
      name: Open windows and doors upstairs
      state: >
        {% set sensors = [states.binary_sensor.window_atticroom_openclose_sensor,
                          states.binary_sensor.window_evaroom_openclose_sensor,
                          states.binary_sensor.window_masterbed_1_openclose_sensor,
                          states.binary_sensor.window_masterbed_2_openclose_sensor,
                          states.binary_sensor.window_guestroom_openclose_sensor] %}
        {{ sensors | selectattr('state', 'eq', 'on') | list | count }}
    - unique_id: open_windows_and_doors_downstairs
      name: Open windows and doors downstairs
      state: >
        {% set sensors = [states.binary_sensor.backdoor_openclose_sensor,
                          states.binary_sensor.frontdoor_openclose_sensor,
                          states.binary_sensor.sheddoor_openclose_sensor,
                          states.binary_sensor.windowdoor_ground_1_openclose_sensor,
                          states.binary_sensor.windowdoor_ground_2_openclose_sensor,
                          states.binary_sensor.windowdoor_ground_3_openclose_sensor,
                          states.binary_sensor.windowdoor_ground_4_openclose_sensor,
                          states.binary_sensor.window_office_openclose_sensor] %}
        {{ sensors | selectattr('state', 'eq', 'on') | list | count }}
    - unique_id: open_windows_and_doors
      name: Open windows and doors
      state: >
        {{ states.sensor.open_windows_and_doors_upstairs.state | int + states.sensor.open_windows_and_doors_downstairs.state | int }}

- sensor:
    - unique_id: count_automations
      name: Automations count
      state: >
        {% set dummy = states("sensor.date") %}
        {{ states.automation | count }}
    - unique_id: count_device_trackers
      name: Device Trackers count
      state: >
        {% set dummy = states("sensor.date") %}
        {{ states.device_tracker | count }}
    - unique_id: count_lights
      name: Lights count
      state: >
        {% set dummy = states("sensor.date") %}
        {{ states.light | count }}
    - unique_id: count_binary_sensors
      name: Binary Sensors count
      state: >
        {% set dummy = states("sensor.date") %}
        {{ states.binary_sensor | count }}
    - unique_id: count_sensors
      name: Sensors count
      state: >
        {% set dummy = states("sensor.date") %}
        {{ states.sensor | count }}
    - unique_id: count_switches
      name: Switches count
      state: >
        {% set dummy = states("sensor.date") %}
        {{ states.switch | count }}
    - unique_id: count_zones
      name: Zone count
      state: >
        {% set dummy = states("sensor.date") %}
        {{ states.zone | count }}
    - unique_id: count_cameras
      name: Camera count
      state: >
        {% set dummy = states("sensor.date") %}
        {{ states.camera | count }}
    - unique_id: count_media_players
      name: Media Players count
      state: >
        {% set dummy = states("sensor.date") %}
        {{ states.media_player | count }}
    - unique_id: count_scripts
      name: Scripts count
      state: >
        {% set dummy = states("sensor.date") %}
        {{ states.script | count }}
    - unique_id: count_locks
      name: Locks count
      state: >
        {% set dummy = states("sensor.date") %}
        {{ states.lock | count }}
    - unique_id: count_vacuums
      name: Vacuum count
      state: >
        {% set dummy = states("sensor.date") %}
        {{ states.vacuum | count }}
    - unique_id: count_zwaves
      name: ZWave count
      state: >
        {% set dummy = states("sensor.date") %}
        {{ states.zwave | count }}
