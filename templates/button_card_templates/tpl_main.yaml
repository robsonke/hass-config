# !toggle word-wrap

#################################################
#                                               #
#                    CIRCLE                     #
#                                               #
#################################################

circle:
  template:
    - base
  custom_fields:
    circle: >
      [[[
        const input = variables.circle_input || 0;
        const text = variables.circle_text || input;
        const radius = 20.5;
        const circumference = radius * 2 * Math.PI;
        const unit = variables.unit;
        return `
          <svg viewBox="0 0 50 50">
            <style>
              circle {
                transform: rotate(-90deg);
                transform-origin: 50% 50%;
                stroke-dasharray: ${circumference};
                stroke-dashoffset: ${circumference - input / 100 * circumference};
              }
              tspan {
                font-size: 10px;
              }
            </style>
            <circle cx="25" cy="25" r="${radius}" stroke="var(--custom-circle-stroke-color)" stroke-width="1.5" fill="none" />
            <text x="50%" y="54%" fill="var(--custom-circle-text-color)" font-size="14" text-anchor="middle" alignment-baseline="middle" dominant-baseline="middle">${text}<tspan font-size="10">${unit}</tspan></text>
          </svg>
        `;
      ]]]
  styles:
    custom_fields:
      circle:
        - display: initial
        - width: 90%
        - letter-spacing: 0.03vw
        - margin: -6% -6% 0 0
        - justify-self: end
        - opacity: 1


#################################################
#                                               #
#                     LIGHT                     #
#                                               #
#################################################

light:
  template:
    - circle
  variables:
    circle_input: >
      [[[ return entity === undefined || Math.round(entity.attributes.brightness / 2.54); ]]]

#################################################
#                                               #
#                 LIGHT_GROUP                   #
#                                               #
#################################################

light_group:
  template:
    - circle
  variables:
    circle_input: >
      [[[
        const lightsOn = entity.attributes.entity_id.map(entity_id => states[entity_id]).filter(state => state ? state.state === 'on' : false).length;
        const allLights = entity.attributes.entity_id.length;
        return Math.round(lightsOn / allLights * 100);
      ]]]
  hold_action:
    action: none

#################################################
#                                               #
#                  IRRIGATION                   #
#                                               #
#################################################

irrigation:
  template:
    - circle
  variables:
    unit: 'm'
    consider_on: >
      [[[
        return states['switch.irrigatie_zones'].state === 'on';
      ]]]
    circle_text: >
      [[[
        return states['sensor.irrigatie_zones_duur'].state;
      ]]]
  styles:
    custom_fields:
      icon:
        - color: >
            [[[
              return variables.consider_on || states['input_boolean.irrigation_plan_enable'].state === 'on'  ? 'var(--blue)' : '';
            ]]]
  hold_action:
    action: none


#################################################
#                                               #
#                     CATS                      #
#                                               #
#################################################

cats:
  template:
    - circle
  variables:
    unit: 'x'
    circle_input: >
      [[[
        return 100;
      ]]]
    circle_text: >
      [[[
        return Math.round(parseInt(states['sensor.cat_door_today'].state)/2);
      ]]]
  state_display: >
    [[[
      return html`
        <ha-relative-time
          id="label"
          class="ellipsis"
          .hass="${hass}"
          .datetime="${entity.last_updated}"
        ></ha-relative-time>`
    ]]]

#################################################
#                                               #
#                     SONOS                     #
#                                               #
#################################################

sonos:
  template:
    - circle
  variables:
    unit: ''
    state: >
      [[[ 
        if (!entity.attributes.entity_id) return false;
        return entity === undefined || entity.attributes.entity_id.map(e => states[e]).filter(state => state.state === 'playing').length > 0 ? 'Playing' : 'Pause';
      ]]]
    consider_on: >
      [[[
        if (!entity.attributes.entity_id) return false;
        const playing = entity.attributes.entity_id.map(entity_id => states[entity_id]).filter(state => state.state === 'playing').length;
        return playing > 0;
      ]]]
    circle_input: >
      [[[
        if (!entity.attributes.entity_id) return false;
        const playing = entity.attributes.entity_id.map(entity_id => states[entity_id]).filter(state => state.state === 'playing').length;
        const allPlayers = entity.attributes.entity_id.length;
        return Math.round(playing / allPlayers * 100);
      ]]]
    circle_text: >
      [[[
        if (!entity.attributes.entity_id) return false;
        const playing = entity.attributes.entity_id.map(entity_id => states[entity_id]).filter(state => state.state === 'playing').length;
        const allPlayers = entity.attributes.entity_id.length;
        return `${playing}/${allPlayers}`;
      ]]]
  state_display: >
    [[[ return variables.state; ]]]
  styles:
    custom_fields:
      icon:
        - clip-path: circle()
        - width: 100%
        - height: 100%
        - pointer-events: none
        - display: grid
  custom_fields:
    icon: >
      [[[
        // find first media player playing and get its entity picture
        if (!entity.attributes.entity_id) return false;
        const playing = entity.attributes.entity_id.map(entity_id => states[entity_id]).filter(state => state.state === 'playing');
        const defaultIcon = `<ha-state-icon icon="${entity.attributes.icon}" style="width: 100%; height: 100%;"></ha-state-icon>`;
        if (playing.length > 0) {
          const entity_picture = playing[0] === undefined || playing[0].attributes.entity_picture;
          return entity_picture === null ? defaultIcon :
            `<div style='background-image: url("${hass.hassUrl(entity_picture)}"); background-position: center center; background-repeat: no-repeat; background-size: cover'></div>`;
        }
        return defaultIcon;
      ]]]

sonos_downstairs:
  template:
    - sonos
  tap_action:
    action: fire-dom-event
    browser_mod:
      service: browser_mod.popup
      data:
        size: wide
        timeout: 60000
        title: Sonos - Muziek
        content:
          # type: "custom:sonos-card"
          # name: "Sonos"
          # entities:
          #   - media_player.eetkamer
          #   - media_player.living_room
          #   - media_player.office
          # background: cover
          # card_mod:
          #   style: |
          #     ha-card.type-custom-sonos-card {
          #       --sns-button-icon-color: var(--primary-color);
          #       --sns-player-background: transparant;
          #       --sns-card-primary-text-color: #fff;
          #     }
          type: custom:layout-card
          layout_type: custom:grid-layout
          layout:
            grid-template-columns: 50% 50%
            grid-template-rows: auto
            grid-template-areas: |
              "living office"
            mediaquery:
              "(max-width: 800px)":
                grid-template-columns: auto
                grid-template-rows: auto
                grid-template-areas: |
                  "living"
                  "office"
          cards:
            - type: custom:sonos-card
              view_layout:
                grid-area: living
              sections:
                - player
                - volumes
                - media browser
                - grouping
                - groups
              entityId: media_player.eetkamer
              entities:
                - media_player.eetkamer
                - media_player.living_room
                - media_player.office
              predefinedGroups:
                - name: Woon + Eet
                  entities:
                    - player: media_player.eetkamer
                    - player: media_player.living_room
                - name: Beneden
                  media: ''
                  entities:
                    - player: media_player.eetkamer
                    - player: media_player.office
                    - player: media_player.living_room
              topFavorites:
                - 'NPO Radio 2'
              artworkAsBackground: true
              hideVolumeCogwheel: false
              skipApplyButtonWhenGrouping: true
              adjustVolumeRelativeToMainPlayer: true
              widthPercentage: 100
              heightPercentage: 100
              mediaBrowserItemsPerRow: 3
              dynamicVolumeSlider: true
              dynamicVolumeSliderThreshold: 40
              dynamicVolumeSliderMax: 40
              replaceHttpWithHttpsForThumbnails: true
              card_mod:
                style: |
                  ha-card {
                    --accent-color: var(--primary-color);
                  }
            - type: custom:sonos-card
              view_layout:
                grid-area: office
              sections:
                - player
                - volumes
                - media browser
                - grouping
                - groups
              entityId: media_player.office
              entities:
                - media_player.office
                - media_player.eetkamer
                - media_player.living_room
              predefinedGroups:
                - name: Woon + Eet
                  entities:
                    - player: media_player.eetkamer
                    - player: media_player.living_room
                - name: Beneden
                  media: ''
                  entities:
                    - player: media_player.eetkamer
                    - player: media_player.office
                    - player: media_player.living_room
              topFavorites:
                - 'Techno'
              artworkAsBackground: true
              hideVolumeCogwheel: false
              skipApplyButtonWhenGrouping: true
              adjustVolumeRelativeToMainPlayer: true
              widthPercentage: 100
              heightPercentage: 100
              mediaBrowserItemsPerRow: 3
              dynamicVolumeSlider: true
              dynamicVolumeSliderThreshold: 40
              dynamicVolumeSliderMax: 40
              replaceHttpWithHttpsForThumbnails: true
              card_mod:
                style: |
                  ha-card {
                    --accent-color: var(--primary-color);
                  }

sonos_upstairs:
  template:
    - sonos
  tap_action:
    action: fire-dom-event
    browser_mod:
      service: browser_mod.popup
      data:
        #size: wide
        timeout: 60000
        title: Sonos - Muziek
        content:
          # type: "custom:sonos-card"
          # name: "Sonos"
          # entities:
          #   - media_player.slaapkamer_sonos
          # background: cover
          # card_mod:
          #   style: |
          #     ha-card.type-custom-sonos-card {
          #       --sns-button-icon-color: var(--primary-color);
          #       --sns-player-background: transparant;
          #       --sns-card-primary-text-color: #fff;
          #     }
          type: custom:sonos-card
          sections:
            - player
            - volumes
            - media browser
            - grouping
            - groups
          entityId: media_player.slaapkamer_sonos
          entities:
            - media_player.slaapkamer_sonos
          topFavorites:
            - 'NPO Radio 2'
          artworkAsBackground: true
          hideVolumeCogwheel: false
          skipApplyButtonWhenGrouping: true
          adjustVolumeRelativeToMainPlayer: true
          widthPercentage: 100
          heightPercentage: 100
          mediaBrowserItemsPerRow: 3
          dynamicVolumeSlider: true
          dynamicVolumeSliderThreshold: 40
          dynamicVolumeSliderMax: 40
          replaceHttpWithHttpsForThumbnails: true
          card_mod:
            style: |
              ha-card {
                --accent-color: var(--primary-color);
              }


#################################################
#                                               #
#                     MUSIC                     #
#                                               #
#################################################

music:
  template:
    - circle
  tap_action:
    action: more-info
  variables:
    circle_input: >
      [[[
        return Math.round(entity.attributes['volume_level'] * 100);
      ]]]


#################################################
#                                               #
#                 ICONS                         #
#                                               #
#################################################

icon_temp:
  custom_fields:
    icon: >
      [[[
        let color = 'currentcolor';
        if (variables.heating) {
          color = 'var(--red)';
        }
        if (variables.cooling) {
          color = 'var(--blue)';
        }
        return `
          <svg viewBox="0 0 50 50">
            <path fill="${color}" d="M32.8 28.2V8.4A8.28 8.28 0 0 0 24.5.1a8.28 8.28 0 0 0-8.3 8.3v19.7c-2.5 2.3-4.1 5.6-4.1 9.3 0 6.9 5.6 12.4 12.4 12.4s12.4-5.6 12.4-12.4c0-3.7-1.6-7-4.1-9.2zm-8.3 17.5a8.28 8.28 0 0 1-8.3-8.3 8.2 8.2 0 0 1 2.8-6.2l1.4-1.2V8.4c0-2.3 1.9-4.1 4.1-4.1s4.1 1.9 4.1 4.1V30l1.4 1.2c1.7 1.6 2.8 3.8 2.8 6.2a8.28 8.28 0 0 1-8.3 8.3zm-2.1-29h4.1v24.8h-4.1V16.7zm2.1 14.5c3.4 0 6.2 2.8 6.2 6.2s-2.8 6.2-6.2 6.2-6.2-2.8-6.2-6.2 2.8-6.2 6.2-6.2z"/>
          </svg>
        `
      ]]]

icon_name:
  size: 1.4em
  color: '#9da0a2'
  styles:
    grid:
      - grid-template-areas: '"i n"'
      - grid-column-gap: 0.3em
    name:
      - font-size: 1.06em
      - letter-spacing: 0.015em
    card:
      - color: '#9da0a2'
      - border-radius: 0.6em
      - padding: 1em 1.4em 1em 1.2em
      - width: max-content
      - font-size: 1.06em
      - font-weight: 500
      - letter-spacing: 0.015em
      - background: '#FFFFFF10'
