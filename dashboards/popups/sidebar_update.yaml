action: fire-dom-event
browser_mod:
  command: popup
  title: Update Info
  style:
    .: |
      :host .content {
        width: 60em;
        height: 100%;
      }
      @media (max-width: 800px) {
        :host .content {
          width: 100%;
        }
      }
    hui-grid-card:
      $: |
        button-card:nth-child(2), button-card:nth-child(4), button-card:nth-child(6) {
          margin: 0.5em 0 3em 0.4em;
        }
        #root {
          grid-gap: 0 !important;
        }
  card:
    type: grid
    columns: 1
    square: false
    cards:
      ## hassio
      - type: custom:button-card
        entity: sensor.hass_version_installed
        triggers_update:
          - sensor.hass_version_latest
          - sensor.hass_release_notes
        state_display: |
          [[[
            if (entity && variables) {
              // markdown parser
              variables.markedjs;
              let links = new RegExp('<a href="([^"]+)"', "g");
              // states
              let installed = entity.state;
              let latest = states["sensor.hass_version_latest"].state;
              let release_notes = marked.parse(states["sensor.hass_release_notes"].attributes.body);
              // return
              let subtitle = installed == latest ?
                `Geen update` :
                `${latest} beschikbaar ${String.fromCodePoint("0x1f389")}`;
              let output = installed == latest ?
                `<ul></ul>` :
                release_notes.replace(links, '<a href="#" onclick="window.open(\'$1\')"');
              return `
                <ha-icon icon="mdi:home-assistant"></ha-icon> <span class="title">Home Assistant ${installed}</span><br>
                <p class="subtitle">${subtitle}</p>
                ${output}
              `;
            }
          ]]]
        template:
          - updater
          - markedjs
      - type: custom:button-card
        entity: sensor.hass_version_installed
        triggers_update:
          - sensor.hass_version_latest
        name: Update Home Assistant
        icon: mdi:update
        styles:
          card:
            - width: max-content
            - display: >
                [[[
                  return entity.state === (states['sensor.hass_version_latest'].state) ? 'none' : 'block';
                ]]]
        tap_action:
          action: fire-dom-event
          browser_mod:
            command: commands
            commands:
              - command: close_popup
              - command: navigate
                navigation_path: /config/dashboard
        template: icon_name

      ### supervisor
      - type: custom:button-card
        entity: sensor.template_supervisor_updates
        state_display: |
          [[[
            let count = entity.state | 0;
            let output = states['sensor.template_supervisor_updates'].attributes.updates;

            let subtitle = count == 0 ? `Geen updates`
                  : `${count} ${count == 1 ? "update beschikbaar" : "updates beschikbaar"} 
                    ${String.fromCodePoint("0x1f389")}`;

            return `
                <ha-icon icon="mdi:home-assistant"></ha-icon> <span class="title">Supervisor (${states['update.home_assistant_supervisor_update'].attributes['installed_version']}) and Addons</span><br>
                <p class="subtitle">${subtitle}</p>
                <ul>${output}</ul>
              `;
          ]]]
        template: updater

      ### hacs
      - type: custom:button-card
        entity: sensor.template_hacs_updates
        state_display: >
          [[[ return entity.attributes.updates; ]]]
        template: updater
