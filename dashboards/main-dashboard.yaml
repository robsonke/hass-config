button_card_templates: !include_dir_merge_named ../templates/button_card_templates
decluttering_templates: !include ../templates/decluttering_templates.yaml

wallpanel:
  enabled: true
  hide_toolbar: false
  idle_time: 0

views:
  - type: custom:grid-layout
    theme: custom-dark
    path: 0
    layout:
      margin: 0
      #grid-gap: calc(var(--grid-card-gap) * 1)
      grid-template-columns: repeat(4, 1fr) 0
      grid-template-rows: 0 repeat(2, fit-content(100%)) 0fr
      grid-template-areas: |
        "sidebar  .        .          .        ."
        "sidebar  home     downstairs upstairs ."
        "sidebar  garden1  garden2    energy   ."
        "sidebar  garden1  garden2    energy   ."
      mediaquery:
        '(max-width: 800px)':
          grid-gap: calc(var(--grid-card-gap) * 0.5)
          grid-template-columns: 0 1fr 0
          grid-template-rows: 0 repeat(7, fit-content(100%)) 0fr
          grid-template-areas: |
            ".  .          ."
            ".  sidebar    ."
            ".  footer     ."
            ".  home       ."
            ".  downstairs ."
            ".  upstairs   ."
            ".  garden1    ."
            ".  garden2    ."
            ".  energy     ."
            ".  .          ."
        '(max-width: 1200px)':
          grid-gap: calc(var(--grid-card-gap) * 1)
          #grid-template-columns: 300px repeat(3, 1fr) 0
          grid-template-columns: repeat(4, 1fr) 0
          grid-template-rows: 0 repeat(2, fit-content(100%)) 0fr
          grid-template-areas: |
            "sidebar  .        .          .        ."
            "sidebar  home     downstairs upstairs ."
            "sidebar  garden1  garden2    energy   ."
            "sidebar  .        .          .        ."

    cards:
      - type: custom:button-card
        view_layout:
          grid-area: 1 / 2 / 2 / 5
        styles: #extra_styles fix, only works from second button card
          card:
            - display: none
      - type: custom:anchor-card
        anchor_id: top
        timeout: 200
        offset: -50
      - type: custom:navbar-card
        styles: |
          .navbar.desktop.bottom {
            left: 170px;
          }
          .navbar.desktop div.route:nth-child(1), .navbar.desktop div.route:nth-child(2),
            .navbar.desktop div.route:nth-child(3) {
            display: none !important;
          }
        desktop:
          position: bottom
        routes:
          - icon: mdi:arrow-up-bold-box-outline
            icon_selected: mdi:arrow-up-bold-box
            url: /main-dashboard/0?anchor=top
            label: Huis
            selected: |
              [[[
                const matchesPath = window.location.pathname == "/main-dashboard/0"; 
                const hasAnchor = window.location.search.includes("anchor=top");
                return matchesPath && hasAnchor;
              ]]]
          - icon: mdi:sofa-outline
            icon_selected: mdi:sofa
            url: /main-dashboard/0?anchor=downstairs-anchor
            label: Beneden
            selected: |
              [[[
                const matchesPath = window.location.pathname == "/main-dashboard/0"; 
                const hasAnchor = window.location.search.includes("anchor=downstairs-anchor");
                return matchesPath && hasAnchor;
              ]]]
          - icon: mdi:bed-double-outline
            icon_selected: mdi:bed-double
            url: /main-dashboard/0?anchor=upstairs-anchor
            label: Boven
            selected: |
              [[[
                const matchesPath = window.location.pathname == "/main-dashboard/0"; 
                const hasAnchor = window.location.search.includes("anchor=upstairs-anchor");
                return matchesPath && hasAnchor;
              ]]]
          # - icon: mdi:flower-tulip-outline
          #   icon_selected: mdi:flower-tulip
          #   url: /main-dashboard/0?anchor=garden-anchor
          #   label: Tuin
          #   selected: |
          #     [[[
          #       const matchesPath = window.location.pathname == "/main-dashboard/0"; 
          #       const hasAnchor = window.location.search.includes("anchor=garden-anchor");
          #       return matchesPath && hasAnchor;
          #     ]]]
          - icon: mdi:cog-outline
            icon_selected: mdi:cog
            url: null
            tap_action:
              !include popups/pp_footer_system.yaml
            label: Settings
            badge:
              color: var(--accent-color)
              show: |
                [[[
                  return (parseInt(states['sensor.unavailable_entities'].attributes['count'])
                          + (states['binary_sensor.important_addons'].state === 'on' ? 0 : 1)) > 0;
                ]]]
              count: |
                [[[
                  return parseInt(states['sensor.unavailable_entities'].attributes['count'])
                          + (states['binary_sensor.important_addons'].state === 'on' ? 0 : 1);
                ]]]
          - icon: mdi:repeat-off
            icon_selected: mdi:repeat-off
            url: null
            tap_action:
              !include popups/pp_footer_update.yaml
            label: Updates
            hidden: |
              [[[
                return parseInt(states['sensor.all_updates'].state) === 0;
              ]]]
            badge:
              show: true
              color: var(--accent-color)
              count: |
                [[[
                  return parseInt(states['sensor.all_updates'].state);
                ]]]
          - icon: mdi:fire
            icon_selected: mdi:fire
            url: null
            tap_action:
              !include popups/pp_footer_stookalert.yaml
            label: Stookwijzer
            badge:
              show: |
                [[[
                  return states['sensor.stookwijzer'].state === 'code_red';
                ]]]
              color: var(--accent-color)

      #################################################
      #                                               #
      #                  Sidebar                      #
      #                                               #
      #################################################
      - type: vertical-stack
        view_layout:
          grid-area: sidebar
        cards:
          - type: custom:clock-weather-card
            entity: weather.weather_langeweide_ecowitt
            tap_action:
              !include popups/pp_sidebar_weather.yaml
            hold_action:
              action: call-service
              service: script.reload_frontend
            sun_entity: sun.sun
            weather_icon_type: line
            animated_icon: true
            forecast_rows: 5
            locale: nl
            time_pattern: HH:mm
            time_format: 24
            date_pattern: cccc d MMMM
            hide_today_section: false
            hide_forecast_section: false
            show_humidity: false
            hide_clock: false
            hide_date: false
            hourly_forecast: false
            use_browser_time: false
            time_zone: Europe/Amsterdam
            show_decimal: false

          - type: custom:gap-card
            height: 20

          - type: horizontal-stack
            cards:
              - type: tile
                entity: person.rob
                show_entity_picture: true
                tap_action:
                  !include popups/pp_person_rob.yaml
                icon_tap_action:
                  !include popups/pp_person_rob.yaml
              - type: tile
                entity: person.steffi
                show_entity_picture: true
                tap_action:
                  !include popups/pp_person_steffi.yaml
                icon_tap_action:
                  !include popups/pp_person_steffi.yaml
          - type: horizontal-stack
            cards:
              - type: tile
                entity: camera.evabed
                show_entity_picture: true
                hide_state: true
                tap_action:
                  !include popups/pp_person_eva.yaml
                icon_tap_action:
                  !include popups/pp_person_eva.yaml
              - type: tile
                entity: camera.noabed
                show_entity_picture: true
                hide_state: true
                tap_action:
                  !include popups/pp_person_noa.yaml
                icon_tap_action:
                  !include popups/pp_person_noa.yaml
          - type: horizontal-stack
            cards:
              - type: tile
                entity: vacuum.sjorsje
              - type: tile
                entity: input_boolean.guest_mode

          - type: custom:gap-card
            height: 20
          - type: tile
            entity: alarm_control_panel.alarmo
            tap_action:
              !include popups/pp_alarm.yaml
            features:
              - type: alarm-modes
                modes:
                  - armed_night
                  - armed_away
                  - disarmed
            card_mod:
              style:
                .: |
                  ha-card .content {
                    display: none !important;
                  }
          - type: custom:trash-card
            entities:
              - calendar.papierbak
              - calendar.grijzebak
              - calendar.groenebak
            event_grouping: true
            drop_todayevents_from: "10:00:00"
            next_days: 35
            pattern:
              - icon: mdi:flower
                color: light-green
                type: organic
                pattern: Groen
              - icon: mdi:newspaper
                color: blue
                type: paper
                pattern: Papier
              - icon: mdi:recycle-variant
                color: amber
                type: recycle
              - icon: mdi:trash-can-outline
                color: grey
                type: waste
                pattern: Grijze
              - icon: mdi:dump-truck
                color: purple
                type: others
            day_style: counter
            day_style_format: yyyy.MM.dd
            card_style: chip
            alignment_style: center
            color_mode: icon
            items_per_row: 1
            refresh_rate: 60
            with_label: true
            layout: default
            filter_events: false
            only_all_day_events: false
            use_summary: false

          #################################################
          #                                               #
          #           Sidebar Footer Icons                #
          #                                               #
          #################################################
          # - type: grid
          #   columns: 3
          #   cards:
          #     - type: custom:button-card
          #       template: footer
          #       name: >
          #         <ha-state-icon icon="mdi:repeat-off"></ha-state-icon>
          #       tap_action:
          #         !include popups/pp_footer_update.yaml
          #       triggers_update:
          #         - sensor.all_updates
          #       variables:
          #         notify: >
          #           [[[
          #             return parseInt(states['sensor.all_updates'].state);
          #           ]]]
          #     - type: custom:button-card
          #       template: footer
          #       name: >
          #         <ha-state-icon icon="mdi:cog"></ha-state-icon>
          #       tap_action:
          #         !include popups/pp_footer_system.yaml
          #       variables:
          #         notify: >
          #           [[[
          #             return parseInt(states['sensor.unavailable_entities'].attributes['count'])
          #               + (states['binary_sensor.important_addons'].state === 'on' ? 0 : 1);
          #           ]]]
          #     - type: custom:button-card
          #       entity: sensor.stookwijzer
          #       template: footer
          #       name: >
          #         <ha-state-icon icon="mdi:fire"></ha-state-icon>
          #       tap_action:
          #         !include popups/pp_footer_stookalert.yaml
          #       variables:
          #         notify: >
          #           [[[
          #             return entity.state === 'code_red';
          #           ]]]
          #       styles:
          #         name:
          #           - color: >
          #               [[[
          #                 if (entity.state === 'code_red') return 'var(--red)';
          #                 if (entity.state === 'code_yellow') return 'var(--yellow)';
          #                 if (entity.state === 'code_orange') return 'var(--orange)';
          #                 if (entity.state === 'triggered') return 'var(--red)';
          #                 return 'var(--green)'
          #               ]]]




      #################################################
      #                                               #
      #                  Downstairs                   #
      #                                               #
      #################################################

      - type: grid
        title: Beneden
        view_layout:
          grid-area: downstairs
        columns: 2
        cards:
          - type: vertical-stack
            card_mod:
              style: |
                :host {
                  /* removing the gap between the anchor and normal card*/
                  --vertical-stack-card-gap: 0;
                }
            cards:
              - type: custom:anchor-card
                anchor_id: downstairs-anchor
                timeout: 200
                offset: -100
              - type: custom:button-card
                entity: light.lights_downstairs
                name: Verlichting
                template:
                  - light_group
                group_expand: true
                tap_action:
                  !include popups/pp_light_downstairs.yaml
                hold_action:
                  action: none
          - type: custom:button-card
            entity: sensor.indoor_temperature
            name: Warmtepomp
            template:
              - climate
              - icon_temp
            triggers_update: climate.warmtepomp
            tap_action:
              !include popups/pp_energy_heating.yaml
            hold_action:
              action: none
            variables:
              icon: "mdi:radiator"
              heating: >
                [[[
                  return states['select.operation_mode'].state === 'heating' && states['switch.climate_control'].state === 'on'
                ]]]
              cooling: >
                [[[
                  return states['select.operation_mode'].state === 'cooling' && states['switch.climate_control'].state === 'on'
                ]]]
          - type: custom:button-card
            entity: media_player.music_downstairs
            name: Muziek
            triggers_update:
              - media_player.eetkamer
              - media_player.office
              - media_player.living_room
            template:
              - sonos_downstairs
          - type: custom:button-card
            entity: binary_sensor.doors_and_windows_downstairs
            name: Deuren
            template:
              - door_window_group_downstairs
            group_expand: true
          

      #################################################
      #                                               #
      #                  Home                         #
      #                                               #
      #################################################

      - type: grid
        title: Huis
        view_layout:
          grid-area: home
        columns: 2
        cards:
          - type: custom:button-card
            entity: alarm_control_panel.alarmo
            template:
              - simple
            name: Alarm
            tap_action:
              !include popups/pp_alarm.yaml
            styles:
              custom_fields:
                icon:
                  - color: >
                      [[[
                        if (entity?.state === 'disarmed') return 'var(--green)';
                        if (entity?.state === 'arming') return 'var(--yellow)';
                        if (entity?.state === 'armed_away' || entity?.state === 'armed_night') return 'var(--orange)';
                        if (entity?.state === 'triggered') return 'var(--red)';
                        return 'var(--green)'
                      ]]]
                  - animation: '[[[ if (entity?.state === "arming" || entity?.state === "triggered") return "blink 2s ease infinite"; return "none"; ]]]'
          - type: custom:button-card
            entity: sensor.ehhatdgg_status
            template:
              - simple
            tap_action:
              !include popups/pp_car_ix3.yaml
            name: BMW iX3
            triggers_update:
              # - binary_sensor.ix3_connection_status
              # - binary_sensor.ix3_charging_status
              - sensor.ehhatdgg_status
            styles:
              entity_picture:
                - width: 45%
                - border-radius: 50%
                - opacity: 0.8
              custom_fields:
                icon:
                  - color: >
                      [[[
                        let plugged = states['sensor.ehhatdgg_status']?.state;
                        if (plugged === 'disconnected') return 'var(--custom-button-card-color-off)';
                        return 'var(--state-icon-active-color)';
                      ]]]
                  - animation: >
                      [[[
                        let charging = states['sensor.ehhatdgg_status']?.state;
                        if (charging === 'charging') return 'blink 4s ease infinite';
                        return 'none';
                      ]]]
            state:
              - value: not_home
                styles:
                  entity_picture:
                    - opacity: 0.4
                    - filter: grayscale(100%)
            variables:
              # circle_input: >
              #   [[[ return Math.round(states['sensor.ix3_remaining_battery_percent']?.state) || 0; ]]]
              consider_on: >
                [[[
                  return states['sensor.ehhatdgg_status'].state == 'charging';
                ]]]
            # state_display: >
            #   [[[ return html`<span>${entity?.state} (${states['sensor.ix3_remaining_range_electric']?.state} km)</span>`;  ]]]
          - type: custom:button-card
            entity: cover.covers_downstairs
            name: Screens
            group_expand: true
            template: cover_group
          - type: custom:button-card
            entity: sensor.picnic_cart_items_count
            name: Picnic
            template: picnic

      #################################################
      #                                               #
      #                  Garden                       #
      #                                               #
      #################################################

      - type: grid
        title: Tuin
        view_layout:
          grid-area: garden1
        columns: 2
        cards:
          - type: vertical-stack
            card_mod:
              style: |
                :host {
                  /* removing the gap between the anchor and normal card*/
                  --vertical-stack-card-gap: 0;
                }
            cards:
              - type: custom:anchor-card
                anchor_id: garden-anchor
                timeout: 200
                offset: -100
              - type: custom:button-card
                entity: sensor.pool_deck_status
                template: pool
                name: Zwembad
          - type: custom:button-card
            entity: light.lights_garden
            name: Tuin
            template:
              - light_group
            group_expand: true
            tap_action:
              !include popups/pp_light_garden.yaml
            hold_action:
              action: none
          - type: custom:button-card
            entity: switch.irrigatie_zones
            name: Beregening
            template:
              - irrigation
            group_expand: true
            tap_action:
              !include popups/pp_irrigation_garden.yaml
          - type: custom:button-card
            entity: binary_sensor.doors_and_windows_garden
            name: Deuren
            template:
              - door_window_group_garden
            group_expand: true
      - type: grid
        title: " "
        view_layout:
          grid-area: garden2
        columns: 2
        cards:
          - type: custom:button-card
            entity: binary_sensor.motion_sensor_cats_occupancy
            template: cats
            name: Boris&Puk
            styles:
              label:
                - color: gray
                - font-size: 11px
            show_label: true
          - type: custom:button-card
            entity: sensor.inkbird_ibt_2x_temperature_probe_1
            triggers_update:
              - timer.bbq
              - sensor.inkbird_ibt_2x_temperature_probe_2
              - input_number.grill_alert_low
              - input_number.grill_alert_high
              - input_number.grill_probe_2_target
            template: bbq
            name: BBQ
            show_label: true

      #################################################
      #                                               #
      #                  Upstairs                     #
      #                                               #
      #################################################

      - type: grid
        title: Boven
        view_layout:
          grid-area: upstairs
        columns: 2
        cards:
          - type: vertical-stack
            card_mod:
              style: |
                :host {
                  /* removing the gap between the anchor and normal card*/
                  --vertical-stack-card-gap: 0;
                }
            cards:
              - type: custom:anchor-card
                anchor_id: upstairs-anchor
                timeout: 200
                offset: -100
              - type: custom:button-card
                entity: light.lights_upstairs
                name: Verlichting
                template:
                  - light_group
                group_expand: true
                tap_action:
                  !include popups/pp_light_upstairs.yaml
                hold_action:
                  action: none
          - type: custom:button-card
            entity: sensor.climate_sensor_masterbedroom_temperature
            name: Klimaat
            template:
              - climate
              - icon_temp
            triggers_update:
              - switch.kasa_infrarood_slaapkamer
              - switch.shelly_plug_kachel_slaapkamer
              - switch.infraroodpanel_eva
              - climate.eurom_alutherm_baseboard_heater
            tap_action:
              !include popups/pp_climate_upstairs.yaml
            hold_action:
              action: none
            variables:
              heating: >
                [[[
                  let heating = states['select.eurom_alutherm_capacity'].state !== 'unavailable' && states['select.eurom_alutherm_capacity'].state !== 'Off' && states['sensor.eurom_alutherm_power'].state > 50;
                  heating = heating || (states['sensor.shelly_plug_badkamer_verwarming_power'].state > 50 || states['sensor.shelly_plug_douche_verwarming_power'].state > 50);
                  heating = heating || states['switch.kasa_infrarood_eva'].state === 'on' || states['switch.infraroodpanel_noa'].state === 'on'
                  return heating;
                ]]]
          - type: custom:button-card
            entity: media_player.music_upstairs
            name: Muziek
            triggers_update:
              - media_player.slaapkamer_sonos
            template:
              - sonos_upstairs
          - type: custom:button-card
            entity: binary_sensor.doors_and_windows_upstairs
            name: Ramen
            template:
              - door_window_group_upstairs
            group_expand: true

      #################################################
      #                                               #
      #                  Energy                       #
      #                                               #
      #################################################

      - type: grid
        title: Energie
        view_layout:
          grid-area: energy
        columns: 2
        cards:
          - type: custom:button-card
            entity: water_heater.domestic_hot_water_tank
            name: Warm water
            template:
              - icon_temp
              - dhw
            triggers_update: water_heater.domestic_hot_water_tank
            tap_action:
              !include popups/pp_energy_dhw.yaml
            hold_action:
              action: none
            variables:
              heating: >
                [[[
                  return states['water_heater.domestic_hot_water_tank'].attributes['operation_mode'] === 'on'
                  && states['water_heater.domestic_hot_water_tank'].attributes['temperature'] - states['water_heater.domestic_hot_water_tank'].attributes['current_temperature'] > 5
                  && states['sensor.shelly_warmtepomp_meter_total_active_power'].state > 1000
                ]]]
          - type: custom:button-card
            entity: sensor.net_power_consumption
            triggers_update:
              - sensor.daily_consumption_energy
              - sensor.energy_price_level
              - sensor.solaredge_dc_power
              - sensor.electricity_cost_today
            name: Energie
            template:
              - energy
            tap_action:
              !include popups/pp_energy_usage.yaml

          - type: custom:button-card
            entity: sensor.water_meter_current_usage
            triggers_update: sensor.water_daily
            name: Water
            template:
              - simple
            tap_action:
              !include popups/pp_energy_water.yaml
            custom_fields:
              info: >
                [[[
                  let water = Math.round(states['sensor.water_daily'].state*100)/100;
                  return `<span>${water} ${states['sensor.water_daily'].attributes['unit_of_measurement']}<br/>${entity.state} ${entity.attributes['unit_of_measurement']}</span>`;
                ]]]
            styles:
              custom_fields:
                icon:
                  - color: >
                      [[[
                        if (entity.state > 0)
                          return 'var(--blue)';
                      ]]]
              state:
                - color: rgba(0, 0, 0, 0)
